/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Placement } from "@popperjs/core";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface SddsBadges {
        /**
          * !!Deprecated!! Use size prop instead. Changes badge from default to small size
         */
        "isSmall": boolean;
        /**
          * Changes visibility of badge
         */
        "isVisible": boolean;
        /**
          * Component is available in size default and small (small dot). Default size is default
         */
        "size": 'default' | 'sm';
        /**
          * Value shown in badge
         */
        "value": string;
    }
    interface SddsPopoverMenu {
        /**
          * Sets the offset distance
         */
        "offsetDistance": number;
        /**
          * Sets the offset skidding
         */
        "offsetSkidding": number;
        /**
          * Decides the placement of the Popover Menu
         */
        "placement": Placement;
        /**
          * The CSS-selector that will trigger this Popover Menu
         */
        "selector": string;
        /**
          * Decides if the Popover Menu should be visible from the start
         */
        "show": boolean;
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLSddsBadgesElement extends Components.SddsBadges, HTMLStencilElement {
    }
    var HTMLSddsBadgesElement: {
        prototype: HTMLSddsBadgesElement;
        new (): HTMLSddsBadgesElement;
    };
    interface HTMLSddsPopoverMenuElement extends Components.SddsPopoverMenu, HTMLStencilElement {
    }
    var HTMLSddsPopoverMenuElement: {
        prototype: HTMLSddsPopoverMenuElement;
        new (): HTMLSddsPopoverMenuElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "sdds-badges": HTMLSddsBadgesElement;
        "sdds-popover-menu": HTMLSddsPopoverMenuElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface SddsBadges {
        /**
          * !!Deprecated!! Use size prop instead. Changes badge from default to small size
         */
        "isSmall"?: boolean;
        /**
          * Changes visibility of badge
         */
        "isVisible"?: boolean;
        /**
          * Component is available in size default and small (small dot). Default size is default
         */
        "size"?: 'default' | 'sm';
        /**
          * Value shown in badge
         */
        "value"?: string;
    }
    interface SddsPopoverMenu {
        /**
          * Sets the offset distance
         */
        "offsetDistance"?: number;
        /**
          * Sets the offset skidding
         */
        "offsetSkidding"?: number;
        /**
          * Decides the placement of the Popover Menu
         */
        "placement"?: Placement;
        /**
          * The CSS-selector that will trigger this Popover Menu
         */
        "selector"?: string;
        /**
          * Decides if the Popover Menu should be visible from the start
         */
        "show"?: boolean;
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "sdds-badges": SddsBadges;
        "sdds-popover-menu": SddsPopoverMenu;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "sdds-badges": LocalJSX.SddsBadges & JSXBase.HTMLAttributes<HTMLSddsBadgesElement>;
            "sdds-popover-menu": LocalJSX.SddsPopoverMenu & JSXBase.HTMLAttributes<HTMLSddsPopoverMenuElement>;
        }
    }
}
