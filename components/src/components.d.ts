/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface SddsBadges {
        /**
          * !!Deprecated!! Use size prop instead. Changes badge from default to small size
         */
        "isSmall": boolean;
        /**
          * Changes visibility of badge
         */
        "isVisible": boolean;
        /**
          * Component is available in size default and small (small dot). Default size is default
         */
        "size": 'default' | 'sm';
        /**
          * Value shown in badge
         */
        "value": string;
    }
    interface SddsButton {
        /**
          * Control for disabled state of component
         */
        "disabled": boolean;
        /**
          * When enabled, makes button take 100% width
         */
        "fullbleed": boolean;
        /**
          * Size of button
         */
        "size": 'sm' | 'md' | '';
        /**
          * Text inside a button
         */
        "text": string;
        /**
          * Type of button
         */
        "type": 'primary' | 'secondary' | 'ghost' | 'danger';
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLSddsBadgesElement extends Components.SddsBadges, HTMLStencilElement {
    }
    var HTMLSddsBadgesElement: {
        prototype: HTMLSddsBadgesElement;
        new (): HTMLSddsBadgesElement;
    };
    interface HTMLSddsButtonElement extends Components.SddsButton, HTMLStencilElement {
    }
    var HTMLSddsButtonElement: {
        prototype: HTMLSddsButtonElement;
        new (): HTMLSddsButtonElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "sdds-badges": HTMLSddsBadgesElement;
        "sdds-button": HTMLSddsButtonElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface SddsBadges {
        /**
          * !!Deprecated!! Use size prop instead. Changes badge from default to small size
         */
        "isSmall"?: boolean;
        /**
          * Changes visibility of badge
         */
        "isVisible"?: boolean;
        /**
          * Component is available in size default and small (small dot). Default size is default
         */
        "size"?: 'default' | 'sm';
        /**
          * Value shown in badge
         */
        "value"?: string;
    }
    interface SddsButton {
        /**
          * Control for disabled state of component
         */
        "disabled"?: boolean;
        /**
          * When enabled, makes button take 100% width
         */
        "fullbleed"?: boolean;
        /**
          * Size of button
         */
        "size"?: 'sm' | 'md' | '';
        /**
          * Text inside a button
         */
        "text"?: string;
        /**
          * Type of button
         */
        "type"?: 'primary' | 'secondary' | 'ghost' | 'danger';
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "sdds-badges": SddsBadges;
        "sdds-button": SddsButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "sdds-badges": LocalJSX.SddsBadges & JSXBase.HTMLAttributes<HTMLSddsBadgesElement>;
            "sdds-button": LocalJSX.SddsButton & JSXBase.HTMLAttributes<HTMLSddsButtonElement>;
        }
    }
}
